---

---

<div id="container">
	<video id="background-video" class="background-video" muted preload="auto">
	</video>
	<!-- Overlay -->
	<div
		class="fixed top-0 left-0 z-0 inset-0 flex items-center justify-center bg-black/30"
	>
	</div>
</div>

<script>
	const videosURL = {
		desktop: "/videos/earth-desktop-1920x1080.mp4",
		mobile: "/videos/earth-mobile-1080x1920.mp4",
	}
	const screenSize = window.matchMedia("(min-width: 768px)");
	const videoTag = document.getElementById(
		"background-video",
	) as HTMLVideoElement;
	const sourceTag = document.createElement("source");
	
	sourceTag.id = "background-video-source";
	sourceTag.setAttribute("type", "video/mp4");
	videoTag.appendChild(sourceTag);
	setVideoSource(screenSize.matches, videosURL.desktop, videosURL.mobile);

	// Play video for 3 seconds
	if (videoTag) {
		videoTag.play();
		setTimeout(() => {
			videoTag.pause();
			handleScroll();
		}, 3000);
	}

	// Add event listener to pause video when user scrolls
	function handleScroll() {
		window.addEventListener("scroll", () => {
			videoTag.pause();
			const updateVideo = () => {
				videoTag.currentTime = window.scrollY / 200 + 3;
				requestAnimationFrame(updateVideo);
			};
			requestAnimationFrame(updateVideo);
		});
	}

	function setVideoSource(sizeMatch:boolean, srcVideoDesktop: string, srcVideoMobile: string) {
		let srcVideo: string;
		if (sizeMatch) {
			srcVideo = srcVideoDesktop;
		} else {
			srcVideo = srcVideoMobile;
		}
		videoTag.pause();
		sourceTag.removeAttribute("src");
		sourceTag.setAttribute("src", srcVideo);
		videoTag.load();
	}

	window.addEventListener("resize", () => {
		const screenSize = window.matchMedia("(min-width: 768px)");
		setVideoSource(screenSize.matches, videosURL.desktop, videosURL.mobile);
	});
</script>

<style>
	#background-video {
		@apply fixed top-0 left-0 z-0 inset-0 w-full h-full object-cover;
	}
</style>
